1
00:00:00,360 --> 00:00:03,570
Let me go back to this idea of a locked box one more time.

2
00:00:03,570 --> 00:00:09,090
So this time imagine I want to give everyone a box for free.

3
00:00:09,090 --> 00:00:12,000
Everyone can have a box and everyone can have a padlock.

4
00:00:12,000 --> 00:00:13,260
I'm giving away padlocks.

5
00:00:13,500 --> 00:00:14,550
Everyone can have one.

6
00:00:14,790 --> 00:00:20,280
And if you want to send me a secret message, put it in the box, lock it with the padlock and send

7
00:00:20,280 --> 00:00:20,940
it to me.

8
00:00:21,240 --> 00:00:24,990
So that means if it's stolen, it is locked with a padlock.

9
00:00:25,350 --> 00:00:28,680
But if someone wants to steal a key, they can't.

10
00:00:28,680 --> 00:00:30,930
Because I didn't give anyone a key.

11
00:00:31,200 --> 00:00:37,470
Only I have a key, a secret private key that I can use to unlock the padlock.

12
00:00:37,890 --> 00:00:43,440
So this is the idea of RSA, but let's take a look at how that might look mathematically.

13
00:00:43,440 --> 00:00:45,150
So we'll go to our notes for this.

14
00:00:45,600 --> 00:00:52,410
So what I'm going to do is give you the procedure for RSA for this read this sentence to start off with.

15
00:00:52,770 --> 00:00:58,830
If it is practically impossible to deduce the decryption key from the encryption key, then the system

16
00:00:58,830 --> 00:01:00,750
is called asymmetric.

17
00:01:00,990 --> 00:01:07,260
This allows you to freely publish the encryption key known as the public key while keeping the decryption

18
00:01:07,260 --> 00:01:09,840
key secret known as the private key.

19
00:01:10,320 --> 00:01:13,320
RSA is an example of an asymmetric system.

20
00:01:13,500 --> 00:01:16,380
So essentially this is like having a padlock.

21
00:01:16,950 --> 00:01:24,330
So there's one method for locking and then there is another key for unlocking which and it's very difficult

22
00:01:24,330 --> 00:01:28,260
to work out the decryption key for the encryption key.

23
00:01:28,620 --> 00:01:32,460
So let's describe the general routine using the smallest possible number.

24
00:01:32,460 --> 00:01:35,730
So I'm just going to describe how this procedure works.

25
00:01:36,030 --> 00:01:37,830
So RSA set up.

26
00:01:38,220 --> 00:01:42,930
So we need two prime numbers and I'm going to call these prime numbers.

27
00:01:43,320 --> 00:01:44,100
Q one.

28
00:01:45,030 --> 00:01:53,820
And Q2 is our prime members and we're going to set em to equal Q1 times.

29
00:01:53,820 --> 00:02:00,360
Q2, we're going to set something called A to equal Q1.

30
00:02:02,190 --> 00:02:08,820
Minus one in a bracket multiplied by Q two minus one in a bracket like that.

31
00:02:09,810 --> 00:02:12,360
And we're going to choose a number E.

32
00:02:14,040 --> 00:02:17,550
Which is less than encode prime to a.

33
00:02:19,200 --> 00:02:19,520
All right.

34
00:02:19,530 --> 00:02:20,670
That is the setup.

35
00:02:21,120 --> 00:02:27,060
So we have two prime numbers and then all these things are deduced from those two prime numbers.

36
00:02:27,720 --> 00:02:35,280
And so the encryption key can be any number, but it has to be less than and k prime to eight now to

37
00:02:35,280 --> 00:02:35,820
encrypt.

38
00:02:36,540 --> 00:02:44,790
So if we want to encrypt a plaintext letter P as a ciphertext, that's a C, we use this formula c.

39
00:02:45,780 --> 00:02:52,260
It's congruent to p to the power e at mod m.

40
00:02:53,890 --> 00:02:54,130
Sir.

41
00:02:54,130 --> 00:03:01,000
E is your encryption key, and in many ways you can think of that formula as being very similar to the

42
00:03:01,000 --> 00:03:08,200
additive encryption formula, the multiplicative encryption formula that we saw way back in Section

43
00:03:08,200 --> 00:03:08,590
one.

44
00:03:09,070 --> 00:03:13,990
But this time we're not adding, we're not multiplying, we're taking the plaintext value and raising

45
00:03:13,990 --> 00:03:15,040
to a power.

46
00:03:16,150 --> 00:03:18,460
So the numbers E and M.

47
00:03:20,630 --> 00:03:24,400
Published and former public key to insight for the message.

48
00:03:24,410 --> 00:03:25,580
Everyone's allowed to know it.

49
00:03:26,120 --> 00:03:33,800
So when you create this cipher, you can just give away the value E and M so that other people can send

50
00:03:33,800 --> 00:03:35,240
you secret messages.

51
00:03:36,650 --> 00:03:37,310
Example.

52
00:03:38,420 --> 00:03:39,260
So let.

53
00:03:40,460 --> 00:03:42,800
Q one equal to.

54
00:03:44,170 --> 00:03:46,250
That's a prime number and.

55
00:03:46,250 --> 00:03:47,120
Q to.

56
00:03:48,170 --> 00:03:49,140
Equals five.

57
00:03:49,210 --> 00:03:50,270
That's another prime number.

58
00:03:50,990 --> 00:03:52,770
Then what is our setup?

59
00:03:52,790 --> 00:03:54,800
We have M, which is our modulus.

60
00:03:55,520 --> 00:03:57,740
M is equal to two times five.

61
00:03:59,060 --> 00:04:02,240
You multiply the primes and you get ten, obviously.

62
00:04:03,140 --> 00:04:06,740
And A and a is equal to.

63
00:04:06,770 --> 00:04:10,220
Well, we subtract one from each of the primes and then multiply.

64
00:04:10,220 --> 00:04:14,690
So it's one times four, which is equal to four.

65
00:04:16,090 --> 00:04:22,400
And now we're going to choose an exponent or an encryption key e equals.

66
00:04:22,430 --> 00:04:25,250
Now it has to be less than and k prime to a.

67
00:04:25,730 --> 00:04:29,480
In this small example, we don't really have many choices.

68
00:04:29,780 --> 00:04:31,370
So equals three.

69
00:04:33,490 --> 00:04:38,710
We would have choices when by using larger numbers, but the numbers that we are going to work with

70
00:04:38,830 --> 00:04:42,550
do have to be less than the value of and the modulus.

71
00:04:43,180 --> 00:04:48,760
So I'm going to send you a message, but I'm restricted here because I've only got a small example,

72
00:04:49,090 --> 00:04:51,430
so I'm going to use letters less than ten.

73
00:04:51,970 --> 00:04:53,190
So here's the message.

74
00:04:53,200 --> 00:04:53,910
Bad egg.

75
00:04:53,920 --> 00:04:56,870
Okay, so unfortunately, I had a bad breakfast.

76
00:04:56,890 --> 00:04:58,720
I'm sending the message bad egg.

77
00:04:59,140 --> 00:05:04,660
And in numerical values, then bees are one, a 0 to 3 and so on.

78
00:05:05,380 --> 00:05:08,380
And now I'm going to hit that with a formula.

79
00:05:08,590 --> 00:05:13,990
The formula is cipher is congruent to.

80
00:05:15,410 --> 00:05:23,480
AP could power e in March or an ease before I'm actually breaking up the mojo steps, I'm going to e

81
00:05:23,660 --> 00:05:27,080
Peter Power E first and so E is three.

82
00:05:27,380 --> 00:05:28,400
So I'm keeping the numbers.

83
00:05:28,430 --> 00:05:38,990
Okay, so one cubed is 102203 cubed is 27 three times three times three four cubed four times four times

84
00:05:38,990 --> 00:05:42,470
four is 64 and six cubed.

85
00:05:42,680 --> 00:05:47,000
I will tell you is 216 and 216 again.

86
00:05:47,510 --> 00:05:53,690
So that's P to the power E and now we're going to do the modulo step and that is my ten.

87
00:05:53,690 --> 00:05:55,180
Oh, well, that's easy.

88
00:05:55,190 --> 00:05:59,900
My ten because it's the remainder of the division by ten.

89
00:05:59,930 --> 00:06:00,980
It's just the last digit.

90
00:06:01,460 --> 00:06:08,090
So that's going to be a one as 07a for a six and a six.

91
00:06:08,090 --> 00:06:10,190
And that would be the cipher you sent.

92
00:06:10,910 --> 00:06:13,370
So you send that as your message.

93
00:06:13,970 --> 00:06:15,530
And so that's the procedure.

94
00:06:15,800 --> 00:06:17,900
It's really not that difficult.

95
00:06:17,900 --> 00:06:24,000
It's no more difficult than the multiplicative, not really, or the additive ciphers that were raised

96
00:06:24,040 --> 00:06:25,130
to an exponent here.

97
00:06:26,090 --> 00:06:29,750
But we're going to look at how you decrypt this message next.

98
00:06:30,110 --> 00:06:33,170
Now, this is where we're going to do quite a lot of work.

99
00:06:33,590 --> 00:06:37,840
So there is quite a lot of work involved in decrypting these messages.

100
00:06:37,850 --> 00:06:42,980
In fact, let's just take a look at what we need to decrypt a message.

101
00:06:43,370 --> 00:06:49,850
So moving on to our next section RSA decryption, we're going to have to find a decryption key.

102
00:06:49,850 --> 00:06:54,080
I call it D for decryption such that this is what we want.

103
00:06:54,680 --> 00:06:58,580
The plaintext is congruent to C to the power.

104
00:06:58,580 --> 00:07:06,530
D So it's the same procedure mod m but it's just reversing what we did before.

105
00:07:06,560 --> 00:07:10,640
So if I hit it on the cipher, I get the original plaintext letter back.

106
00:07:11,810 --> 00:07:16,400
So in other words, we need to find this number d such that.

107
00:07:16,970 --> 00:07:29,960
So I want the plaintext to be congruent to C to the power D And what is c0c is plaintext to the power

108
00:07:29,960 --> 00:07:39,980
e in brackets and in that is to the power of D, but that is congruent to or equal to p to the power

109
00:07:39,980 --> 00:07:45,350
e times D because that's how exponents work, that's how powers work.

110
00:07:46,220 --> 00:07:49,520
And this will be in mod m arithmetic.

111
00:07:50,690 --> 00:07:51,800
So that's what we're looking for.

112
00:07:51,980 --> 00:08:01,280
We're looking for some value where that is true, the next three results will show that D exists and

113
00:08:01,280 --> 00:08:02,450
how to find it.

114
00:08:02,750 --> 00:08:08,420
But I think we'll take a pause here and I'll put the results in the next video.

115
00:08:08,660 --> 00:08:13,580
We're going to have some actual proper mathematical results which have proper mathematical names.

116
00:08:13,580 --> 00:08:17,240
The code firm has a little theorem and the Chinese remainder theorem.
