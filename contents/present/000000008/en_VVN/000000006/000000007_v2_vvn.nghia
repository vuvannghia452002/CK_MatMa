1
00:00:00,150 --> 00:00:08,310
Trong phần này, tôi muốn xem xét một số phương pháp bạn có thể sử dụng để phá vỡ tất cả những điều này và những gì chúng ta có thể làm để ngăn điều đó xảy ra.

2
00:00:08,640 --> 00:00:19,320
Vì vậy, nếu chúng ta nhìn vào ghi chú của mình ở đây, đây được gọi là Phá vỡ RSA.  Mã hóa RSA cực kỳ mạnh mẽ với điều kiện chúng ta tự bảo vệ mình khỏi một số cuộc tấn công rõ ràng.

3
00:00:19,770 --> 00:00:38,040
Đầu tiên là phân tích tần số.  Nếu bạn còn nhớ những ví dụ mà chúng ta đã xem xét trước đây, thì thực ra tôi đang mã hóa từng chữ cái một, và thông minh như RSA, và điều đó vẫn có nghĩa là ít nhất chúng ta có thể phá vỡ nó bằng cách phân tích tần số theo cách tôi đã trình bày.

4
00:00:38,310 --> 00:00:52,290
Vì vậy, thay vì mã hóa từng chữ cái một, vì điều đó vẫn khiến bạn dễ bị tấn công tần số đơn giản, vấn đề này được khắc phục bằng cách chặn hoặc nhóm các chữ cái thành các khối.

5
00:00:53,010 --> 00:01:03,930
Hãy để tôi chỉ cho bạn một ví dụ về điều đó.  Vì vậy, thay vì chỉ thực hiện từng chữ cái hoặc từng số một, chúng ta sẽ sắp xếp chúng lại với nhau hoặc nhóm chúng lại với nhau.

6
00:01:04,380 --> 00:01:19,210
Vậy E bằng 47. Được rồi.  Đây là khóa công khai tôi đưa cho bạn ở đây bằng 47 và M bằng 150. Tôi thích thông tin công khai thú vị.

7
00:01:19,630 --> 00:01:33,550
Nhắn tin bằng số cho quả trứng xấu nếu bạn nhớ rằng nó có các giá trị này là 103466. Và vâng, theo cách tôi đã làm trước đây và bạn có thể thấy rằng có một số chữ cái phổ biến hơn những chữ cái khác.

8
00:01:33,850 --> 00:01:45,130
Nhưng chúng ta có thể chia cái này thành ba khối gồm hai chữ cái, sẽ cho chúng ta 1034 và 66. Và chính những nhóm này được mật mã tác động.

9
00:01:45,340 --> 00:02:06,770
Vì vậy, những gì chúng ta sẽ làm là lũy thừa 10 và sau đó sử dụng khóa mã hóa 47. Và bạn có thể tính toán theo cách bạn muốn và giá trị bạn sẽ nhận được là 8034 lũy thừa 47 và mọi Mod 115 sẽ là 89 và 66  tới Quyền lực 47.

10
00:02:06,970 --> 00:02:17,680
Trong Mẫu 115 là 111. Vậy đó chính là văn bản mật mã mà tôi đã nói.  Nó sẽ ẩn tần số của từng chữ cái.

11
00:02:18,010 --> 00:02:28,600
Tần số KHỐI trở nên độc lập hơn và đồng đều hơn khi các khối được đưa vào lâu hơn, các khối gồm 10 chữ cái có khả năng gần như nhau.

12
00:02:28,840 --> 00:02:36,060
Vì vậy, nếu bạn có thể viết tin nhắn của mình theo khối và sau đó thực hiện các phép tính của mình trên các khối đó.

13
00:02:36,880 --> 00:02:44,730
Điều đó sẽ ngăn chặn việc phân tích tần số.  Chúng ta hãy xem cuộc tấn công khác ở đây.  Nó được gọi là tấn công bằng bản rõ được chọn.

14
00:02:45,390 --> 00:02:56,970
Vì vậy, điều này là rất lén lút.  Đây là một cách khác để phá RSA là mã hóa các tin nhắn văn bản đơn giản bằng cách sử dụng khóa chung và sau đó xem liệu chúng có bằng văn bản mã hóa hay không.

15
00:02:57,300 --> 00:03:04,020
Vậy là bạn đã đánh cắp được một bản mã.  Bạn nghĩ có lẽ nó nói, tôi không biết.  Tôi nghĩ nó nói Tấn công London.

16
00:03:04,590 --> 00:03:14,670
Tôi có thể sử dụng khóa chung để xem cuộc tấn công London trông như thế nào trong mật mã dưới dạng mật mã.  Và so sánh nó với bản mã mà tôi đã đánh cắp.

17
00:03:15,510 --> 00:03:24,300
Vì vậy, để ngăn chặn điều này, RSA thường nhúng một số dạng đệm ngẫu nhiên có cấu trúc vào bản rõ.

18
00:03:24,510 --> 00:03:33,230
Vì vậy, khi bạn gửi tin nhắn bằng RSA, bạn cũng sẽ dán một số ký hiệu giả vào đó.  Đúng.

19
00:03:33,330 --> 00:03:42,000
Trải rộng khắp bản rõ.  Phần đệm đảm bảo rằng bản rõ mã hóa tốt thành một số lượng lớn các bản mã có thể có khác nhau.

20
00:03:42,360 --> 00:03:51,450
Vì vậy, bạn có thể có nhiều phần đệm khác nhau có thể.  Và khi bạn mã hóa những thứ này, bạn sẽ có rất nhiều khả năng khác nhau cho văn bản mật mã của mình.

21
00:03:52,350 --> 00:04:03,540
Nếu chúng ta không thể phân biệt giữa hai bản mã, ngay cả khi chúng biết hoặc ngay cả khi chúng ta biết bản rõ gốc, thì chúng ta nói rằng mật mã đó an toàn về mặt ngữ nghĩa.

22
00:04:04,260 --> 00:04:12,960
Ý tôi là hãy tưởng tượng tôi đưa cho bạn hai văn bản mật mã và tôi nói, một trong số đó viết, Xin chào.  Một trong số đó nói Tạm biệt.

23
00:04:13,110 --> 00:04:21,750
Bạn có thể cho biết cái nào là cái nào không?  Và bạn nhìn vào chúng và bạn thấy rằng chúng có cùng chiều dài.  Bạn không nhận thấy bất kỳ chữ cái kép nào hoặc bất cứ thứ gì tương tự.

24
00:04:22,020 --> 00:04:28,410
Và bạn nói, Không, tôi không thể biết cái nào là xin chào, cái nào là tạm biệt?  Sau đó, đó là an toàn về mặt ngữ nghĩa.

25
00:04:28,920 --> 00:04:40,680
Trong thực tế, điều này làm cho độ bảo mật của mật mã tương đương với độ bảo mật của mật mã một lần.  Bạn đang nói một cách hiệu quả rằng những điều này có khả năng là lời chào hoặc lời tạm biệt như nhau.

26
00:04:41,250 --> 00:04:57,480
RSA với phần đệm thích hợp sẽ an toàn về mặt ngữ nghĩa, đó là một điều tốt.  Tôi biết hình thức tấn công đó có thể là cuộc tấn công bằng văn bản mã hóa được lựa chọn đầy hoài nghi.

27
00:04:57,750 --> 00:05:05,790
Và tôi có một số khoảng trống ở đây, vì vậy chúng ta hãy xem xét điều này.  Vì vậy, giả sử chúng tôi là gián điệp đang cố gắng giải mã một tin nhắn mật mã.

28
00:05:05,800 --> 00:05:14,370
Tôi sẽ gọi nó là C.  Và chúng ta biết mật mã là RSA.  Vì vậy, nó là một tin nhắn văn bản đơn giản p lũy thừa e.

29
00:05:15,400 --> 00:05:28,480
Ở thời hiện đại.  Chúng ta có thể lén lút yêu cầu người giữ khóa riêng giải mã một mật mã khác.  Tôi có thể nói, Bạn có thể giúp tôi một việc được không?

30
00:05:28,720 --> 00:05:39,910
Bạn có thể giải mã được mật mã này không?  C hai Bây giờ họ sẽ giải mã c hai cho bạn, nhưng bạn đã tạo ra mật mã này và nó bằng hoặc đồng dạng với C một.

31
00:05:41,170 --> 00:05:55,190
Nhân x lũy thừa e.  M mod m.  Đầu tiên một số số nguyên x được chọn.  Vậy là tôi biết E có thông tin công khai.  Tôi biết tôi.

32
00:05:55,190 --> 00:06:07,910
Đó là thông tin công khai.  Tôi đã chọn giá trị cho x, tôi muốn chọn gì cũng được.  Sau đó tôi lấy x lũy thừa e tôi nhân với mật mã tôi đã đánh cắp.

33
00:06:08,570 --> 00:06:19,490
Chỉ làm mod đó thôi và tôi đã tạo được một mật mã mà mật mã giả có thể là C2.  Sau đó tôi yêu cầu người giữ khóa riêng giải mã cái này cho tôi.

34
00:06:20,090 --> 00:06:33,850
Và nếu họ làm như vậy, thì việc giải mã sẽ là p nhân x.  Hiện đại.  Vậy đó là kết quả.  Và họ nói, bạn đây, đã giải mã nó.

35
00:06:33,850 --> 00:06:48,850
Có vẻ như p x này chính là thứ bạn sắp nhận được.  Và nếu vì bạn biết X là gì, bạn có thể tìm nghịch đảo nhân của x và bạn có thể loại bỏ nó và nhận được P tin nhắn văn bản thuần túy ban đầu.

36
00:06:50,980 --> 00:07:03,040
Tuy nhiên, tất nhiên chúng ta có thể ngăn chặn điều đó bằng cách sử dụng sơ đồ đệm.  Và đây là một ví dụ được gọi là được rồi, epi, phần đệm mã hóa bất đối xứng tối ưu.

37
00:07:03,040 --> 00:07:11,230
Vì vậy, nó chỉ là một phương pháp bao gồm các ký hiệu giả mạo này để ngăn chặn kiểu tấn công này, cuộc tấn công bằng văn bản mã hóa được chọn này.

38
00:07:13,280 --> 00:07:26,390
Và cuối cùng, đây là một cách khác để bạn có thể phá vỡ Hệ số RSA.  Đối với tôi, đây có vẻ như là một lỗ hổng cố hữu trong RSA cho đến khi bạn thấy những gì chúng tôi sắp làm.

39
00:07:26,870 --> 00:07:47,150
Cuối cùng, RSA có thể bị phá vỡ nếu chúng ta tìm được các số nguyên tố ban đầu.  Q1 và Q2.  Nếu bạn có thể tìm ra các số nguyên tố ban đầu, thì nếu bạn có chúng, thì bạn có thể tính a vì đó là một điều đơn giản là Q một trừ một nhân với Q2, trừ một.

40
00:07:48,170 --> 00:08:12,950
Và nếu bạn có thể tính A, bạn có thể sử dụng A và E, là thông tin công khai để tìm khóa giải mã nhân D hoặc nghịch đảo nhân của E, thật không may, vì M bằng Q một, Q hai, và đó là thông tin công khai  .

41
00:08:13,640 --> 00:08:27,990
Chúng ta có thể tìm các số nguyên tố ban đầu bằng cách phân tích hệ số.  Và bây giờ hãy tưởng tượng về điệp viên.  Bạn lấy thông tin công khai, bạn có M làm mô-đun thử nó, bạn tìm thấy các số nguyên tố.

42
00:08:28,580 --> 00:08:37,190
Nếu bạn tìm được các số nguyên tố, bạn có thể tìm được a và bạn có thể sử dụng A và E cùng nhau để tìm khóa giải mã và bạn đã phá được mật mã.

43
00:08:38,600 --> 00:08:46,670
Điều đó nghe có vẻ giống như một lỗ hổng cố hữu trong sơ đồ vì bạn cung cấp mô-đun này dưới dạng thông tin miễn phí.

44
00:08:47,600 --> 00:09:03,140
Và hãy xem một ví dụ về việc bạn làm điều đó.  Đây là một ví dụ, giống như ví dụ chúng ta đã thấy trước khi có khóa mã hóa bằng 47 và mô đun m bằng 115.

45
00:09:04,610 --> 00:09:18,830
Và thực sự không khó lắm để tính ra 150 bằng 5 nhân 23. Vì vậy, tôi đã thử nó và ồ, nhìn xem, tôi có hai số nguyên tố.

46
00:09:19,160 --> 00:09:29,930
Khi tôi đã có số nguyên tố, bây giờ tôi có thể tính a bằng năm trừ một bằng bốn nhân với 23 trừ một bằng 22.

47
00:09:30,950 --> 00:09:44,960
Vậy A bằng 88. Bây giờ chúng ta có thể sử dụng.  Được thôi, bất cứ phương pháp nào bạn muốn.  Tôi đã sử dụng thuật toán Euclid ở đây để tính 15 nhân 47.

48
00:09:46,340 --> 00:10:02,040
Thêm.  Trừ tám nhân 88. Bằng một.  Và điều đó có nghĩa là khóa giải mã.  Có phải bit này ở phía trước 47 D bằng 15.

49
00:10:02,280 --> 00:10:19,200
Tôi đã có khóa giải mã và bây giờ tôi có thể giải mã tin nhắn bằng giá trị đó.  Ôi, em yêu.  Tuy nhiên, điều này có thể xảy ra vì các số nguyên tố Q1 và Q2 khá nhỏ, tương đối nhỏ.

50
00:10:19,740 --> 00:10:30,450
Và điều đó có nghĩa là giá trị cuối cùng, mô đun đã được phân chia khá nhanh chóng.  Và khóa riêng sau đó được tìm thấy từ khóa chung.

51
00:10:30,480 --> 00:10:42,390
Khóa riêng.  Nó được tìm thấy từ khóa công khai.  Trong thực tế, các số nguyên tố được sử dụng lớn hơn nhiều.  Phải.  Vì vậy, đây là điều tôi muốn cho bạn thấy.

52
00:10:42,690 --> 00:10:53,910
Và hãy nhớ, nội dung này là thông tin công khai.  Vì vậy, nếu bạn truy cập một nơi nào đó như Amazon hoặc eBay hoặc ngân hàng trực tuyến của mình, bạn có thể vào phần cài đặt.

53
00:10:53,910 --> 00:11:02,750
Vì vậy, bạn có thể truy cập trang web ngân hàng trực tuyến của mình.  Và nếu bạn nhìn vào thanh địa chỉ, chúng thường có biểu tượng ổ khóa.

54
00:11:02,760 --> 00:11:13,350
Nếu bạn nhấp vào đó, bạn sẽ tìm thấy thứ gọi là khóa RSA.  Vì vậy, nó ở đó để bạn tìm vì đó là thông tin công khai, khóa công khai ở đó và bạn sẽ tìm thấy hai số đó.

55
00:11:13,350 --> 00:11:19,980
Chúng ta đã nói về giá trị E, giá trị mã hóa và bạn cũng tìm thấy mô đun, giá trị M.

56
00:11:20,220 --> 00:11:33,410
Và đó là những gì tôi đã làm.  Tôi đã truy cập trang web ngân hàng của mình và tìm thấy những giá trị đó.  Giá trị E khá lớn, khoảng 65.000 và hơi nhỏ so với giá trị mô đun.

57
00:11:33,420 --> 00:11:40,050
Những gì tôi muốn cho bạn thấy các giá trị mô đun.  Ngoài ra, tôi biết con số lớn đó và chính là con số này.  Tôi đã có nó ở đây.

58
00:11:40,620 --> 00:11:55,560
Vì vậy, nó ở đây.  Đây là mô-đun được ngân hàng của tôi sử dụng để gửi khóa RSA.  Và đây là khoảng 20.000 nghìn tỷ.

59
00:11:57,810 --> 00:12:06,510
Google.  Bây giờ, đó là 100 chữ số.  Google có thêm 100 chữ số ở đó.  Google, 100 chữ số khác.

60
00:12:07,230 --> 00:12:22,670
Google.  Google.  Google.  Thế đấy.  Con số khổng lồ này thực sự dài 617 chữ số.  Hoàn toàn đồ sộ.

61
00:12:22,680 --> 00:12:40,080
Phải.  Đây là giá trị mà ngân hàng của tôi sử dụng để gửi khóa RSA.  Tuyệt đối.  Giá trị rất lớn.  Và mô đun này được tạo ra bằng cách nhân hai số nguyên tố với nhau, nhưng hai số nguyên tố rất lớn với nhau.

62
00:12:40,620 --> 00:12:54,930
Vì vậy, để phá vỡ băng, đây trở thành một vấn đề cực kỳ khó khăn.  Quá khó để thực sự nhượng quyền thương mại này bằng cách sử dụng một máy tính hiện đại vì một vấn đề cực kỳ khó giải quyết.

63
00:12:55,320 --> 00:13:05,880
Và đó là lý do tại sao họ sử dụng những con số khổng lồ này.  Và tôi đang nói như thể nếu bạn sử dụng máy tính, sẽ mất 30.000 năm hoặc tương tự.

64
00:13:06,360 --> 00:13:14,850
Vì vậy đây trở thành một nhiệm vụ rất khó khăn.  Và Khóa RSA hiện tại, vâng.  Sẽ phải mất hàng nghìn năm mới đưa những chiếc máy tính hiện đại vào sản xuất.

65
00:13:14,910 --> 00:13:24,030
Vì vậy, bạn đi.  Đó là sự kết thúc của phần đó.  Cuối cùng, chúng ta hãy xem phần tiếp theo, phần được gọi là chữ ký.

66
00:13:24,210 --> 00:13:39,090
Làm thế nào để chúng ta biết liệu một tin nhắn có thực sự đến từ người mà chúng ta nghĩ là người gửi hay không? Thực ra, có một cách để ký tin nhắn của bạn và nó sử dụng phương pháp RSA để chứng minh bạn nói mình là ai.

